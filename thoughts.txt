Questions
- Where do you move Gotm.is_live()?
- What would be the version number for this plugin?
    - Answer: 2.0.0
- Discuss the usage of GotmMark. It is strictly just to upvote and downvote GotmContent as of this moment. What future usage can this class hold? Would it be better to move the upvote and downvote functionality inside the GotmContent itself? What possible other types and targets can it include?
    - Answer: Keep GotmMark API, but also add functionality to GotmContent directly
- Discuss GotmBlob. To the end user, GotmBlob seems confusing. Little documentation and end-user usage is weird. Would it be better to put functionality inside of GotmContent? Does blob have any future prospects besides GotmContent?
    - Answer: Remove GotmBlob, move functionality to GotmContent
- Do I need _impl in GotmUser and in other end-user classes? Is there no better way to store private variables in objects? Currently there are no "private" vars or functions. Maybe we can use get/set meta as well? (not on the script but on the instanced objects)
    - Remove anything and everything _impl
- Are Leaderboards/Scores/Content/etc. still beta features?
    - No, remove beta from documentation and test functions

Notes:
- All functions have been sorted alphabetically for legibility reasons, this is due to the new documentation generation in Godot 4 putting everything alphabetically.
- #warnings-disable does not work. They seemed to be in favor of removing: https://github.com/godotengine/godot-proposals/issues/753#issuecomment-619533712 ... perhaps for the better?
- const dictionaries/arrays used to be shallow in Godot 3. This plugin utilized that fact to make the equivilant of "static variables" (i.e. _global in _GotmUtility). That is no longer the case: https://github.com/godotengine/godot/pull/71051. Using get/set meta instead as a hacky workaround...
- _GotmScore.get_implementation() changed return type to named enum to avoid unnecesary instantiation in the return. Instantiation is not needed because all functions are static, Editor throws warnings (no errors) about using a static function with an instanced variable.
    - Same for _GotmMark/GotmContent/etc...
- plugin icon should resize with editor display scale Editor -> Editor Settings -> Interface/Editor -> Display Scale. Currently does not..

Suggestions:
- make sure all push errors are properly standerized
- implement Godot's new in-editor documentation feature wherever possible, include example code in the docs for all/most functions for end-user documentation?
- move some _GotmScore functions to _GotmLeaderboard i.e. get_counts, get_rank, list, list_by_rank, etc. I think it is better to decouple as much as possible.
- remove unused parameters in functions, i.e. _GotmBlobLocal.fetch()
- due to overshadowing variable warnings, many scripts have function parameters that begin with underscore, i.e GotmScore, GotmContent, etc. Try to rename variables better?
- In _GotmContent, think about breaking up the function 'fetch' into smaller functions: fetch -> GotmContent, fetch_properties -> Dictionary, fetch_blob.
    - Same for 'get_by_key' and etc...
- Static typing: Convert most functions to have return types. Maybe discuss the usage of strict return types vs variant returns inside this plugin. Some functions have several return types, maybe we should break them up. Yes, it is more code, but it is more safe and also it's not for end-users, also less safety checks.
    - i.e. _GotmContent fetch(), update(), get_by_key(), etc.
- Rename files to have snake_case. https://docs.godotengine.org/en/stable/tutorials/scripting/gdscript/gdscript_styleguide.html#file-names
- We should do more safety checks for cases like this: https://discord.com/channels/553879501478690816/1091068986046816326
- GotmContents maybe should have a property called "is_publicly_editable" (default false?). Other users besides owners CAN fetch but cannot update or delete content, only owner can do it. Adds add extra security for sharable GotmContents
- Implement encryption when using HTTP Methods? Helps prevents spoofing score or content values