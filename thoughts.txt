Questions
- What would be the version number for this plugin?
    - Answer: 2.0.0
- Discuss the usage of GotmMark. It is strictly just to upvote and downvote GotmContent as of this moment. What future usage can this class hold? Would it be better to move the upvote and downvote functionality inside the GotmContent itself? What possible other types and targets can it include?
    - Answer: Keep GotmMark API, but also add functionality to GotmContent directly
- Do I need _impl in GotmUser and in other end-user classes? Is there no better way to store private variables in objects? Currently there are no "private" vars or functions. Maybe we can use get/set meta as well? (not on the script but on the instanced objects)
    - Remove anything and everything _impl
- Are Leaderboards/Scores/Content/etc. still beta features?
    - No, remove beta from documentation and test functions
- Where do you move Gotm.is_live()?
    - Answer: Unnecesary function because the plugin will work outside of gotm hosting

Notes:
- renamed all files to snake_case as per the style guide
- all functions have been sorted alphabetically for legibility reasons, this is due to the new documentation generation in Godot 4 putting everything alphabetically.
- #warnings-disable does not work. They seemed to be in favor of removing: https://github.com/godotengine/godot-proposals/issues/753#issuecomment-619533712 ... perhaps for the better?
- const dictionaries/arrays used to be shallow in Godot 3. This plugin utilized that fact to make the equivilant of "static variables" (i.e. _global in _GotmUtility). That is no longer the case: https://github.com/godotengine/godot/pull/71051. Using get/set meta instead as a hacky workaround...
- Strings cannot longer user the unary NOT operator (i.e. !String). Switching to String.is_empty() instead.
- delete() from GotmScore, GotmContent, GotmMark now return bool for success/fail
- Removed GotmBlob, moved functionality to GotmContent (_GotmBlob still exists)

Suggestions:
- move some _GotmScore functions to _GotmLeaderboard i.e. get_counts, get_rank, list, list_by_rank, etc. I think it is better to decouple as much as possible.
- in _GotmContent, think about breaking up the function 'fetch' into smaller functions: fetch -> GotmContent, fetch_properties -> Dictionary, fetch_blob.
    - Same for 'get_by_key' and etc...
- implement encryption when using HTTP Methods? Helps prevents spoofing score or content values

General Todo:
- make sure all push errors are properly standerized
- implement Godot's new in-editor documentation feature wherever possible, include example code in the docs for all/most functions for end-user documentation?
- GotmContent functionality needs more testing
    - Especially after_content_id in list()

WebRTC in Plugin:
- When exporting to Android, make sure to enable the INTERNET permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android.
    - Could maybe have the plugin check this